apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"
apply from: project(':react-native-config').projectDir.getPath() + "/dotenv.gradle"

// Configuration for React Native
react {
    autolinkLibrariesWithApp()
}

// Proguard configuration for release builds
def enableProguardInReleaseBuilds = false

// Preferred JavaScriptCore (JSC) flavor
def jscFlavor = 'org.webkit:android-jsc:+'

def loadEnv(appName) {
    def envFile = file("../..")
    def envProps = new Properties()
    envFile.withInputStream { stream -> envProps.load(stream) }
    return envProps.findAll { it.key.toString().startsWith("${appName.toUpperCase()}_") }
}
android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.awesomeproject2"
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
    }

    // signingConfigs {
    //     debug {
    //         storeFile file('debug.keystore')
    //         storePassword 'android'
    //         keyAlias 'androiddebugkey'
    //         keyPassword 'android'
    //     }
    //     release {
    //         storeFile file('../../keyStore/demo.jks')
    //         storePassword '123456'
    //         keyAlias 'key0'
    //         keyPassword '123456'
    //     }
    // }
     signingConfigs {
        app1 {
            storeFile file('../../keyStore/app1.jks')
            storePassword 'app1Password'
            keyAlias 'app1Alias'
            keyPassword 'app1KeyPassword'
        }
        app2 {
            storeFile file('../../keyStore/app2.jks')
            storePassword 'app2Password'
            keyAlias 'app2Alias'
            keyPassword 'app2KeyPassword'
        }
    }

    // Define product flavors for white-label apps
    flavorDimensions += "branding"
    productFlavors {
         App1 {
            dimension "branding"
            applicationIdSuffix ".app1"
            versionCode 101
            versionName "1.0.1"
        }
        App2 {
            dimension "branding"
            applicationIdSuffix ".app2"
            versionCode 102
            versionName "1.0.2"
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        // release {
        //     signingConfig signingConfigs.release
        //     minifyEnabled enableProguardInReleaseBuilds
        //     proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        // }
         release {
            signingConfig signingConfigs.dynamicSigningConfig
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }
}

dependencies {
    implementation("com.facebook.react:react-android")
    implementation project(':react-native-config')
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}
