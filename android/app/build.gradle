apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

def getEnvValue(String key, String defaultValue) {
    def envProps = new Properties()
    def envFile = rootProject.file(".env")
    if (envFile.exists()) {
        envFile.withInputStream { stream -> envProps.load(stream) }
    }
    return envProps.getProperty(key, defaultValue)
}

// Configuration for React Native
react {
    autolinkLibrariesWithApp()
}

// Proguard configuration for release builds
def enableProguardInReleaseBuilds = false

// Preferred JavaScriptCore (JSC) flavor
def jscFlavor = 'org.webkit:android-jsc:+'

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.awesomeproject2"
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword '123456'
            keyAlias 'key0'
            keyPassword '123456'
        }
        release {
            storeFile file('../../keyStore/appRelease.jks')  // Make sure the correct path is provided
            storePassword '123456'
            keyAlias 'key0'
            keyPassword '123456'
        }
    }

    // Define product flavors for white-label apps
    flavorDimensions += "branding"
    productFlavors {
        App1 {
            dimension "branding"
            applicationIdSuffix ".app1"
            versionCode 101
            versionName "1.0.1"
            resValue "string", "app_name", "App-1"

            // Optional: Read API_URL from .env or fallback to default
            def apiUrl = getEnvValue("API_URL", "https://default.api.com")
            buildConfigField "String", "API_URL", "\"${apiUrl}\""
        }
        App2 {
            dimension "branding"
            applicationIdSuffix ".app2"
            versionCode 102
            versionName "1.0.2"
            resValue "string", "app_name", "App-2"

            // Optional: Read API_URL from .env or fallback to default
            def apiUrl = getEnvValue("API_URL", "https://default.api.com")
            buildConfigField "String", "API_URL", "\"${apiUrl}\""
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release  // Make sure this points to the correct signing config
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}

dependencies {
    implementation("com.facebook.react:react-android")
    implementation project(':react-native-config')
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}
